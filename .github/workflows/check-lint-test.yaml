on: push

env:
  BEACON_URL: ${{ secrets.BEACON_URL }}
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  GETH_SUPPLY_LIVE_API_URL: ${{ secrets.GETH_SUPPLY_LIVE_API_URL }}
  GETH_URL: ${{ secrets.GETH_URL }}
  GLASSNODE_API_KEY: ${{ secrets.GLASSNODE_API_KEY }}
  SQLX_OFFLINE: "true"

name: check-lint-test

jobs:
  check:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

      # check-schema:
      #   runs-on: ubuntu-latest
      #   continue-on-error: true
      #   steps:
      #     - name: Checkout sources
      #       uses: actions/checkout@v3

      #     - run: rustup toolchain install stable --profile minimal

      # - name: Install sqlx-cli
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: install
      #     args: sqlx-cli

      # - name: Run sqlx check
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: sqlx
      #     args: prepare --check -- --all-targets

  lint:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets -- -D warnings

  test:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test -- --nocapture
