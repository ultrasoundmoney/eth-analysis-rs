on: push

env:
  BEACON_URL: ${{ secrets.BEACON_URL }}
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  GETH_URL: ${{ secrets.GETH_URL }}
  GLASSNODE_API_KEY: ${{ secrets.GLASSNODE_API_KEY }}
  SQLX_OFFLINE: "true"

name: check-lint-test

jobs:
  check:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  # check-schema:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3

  #     - run: rustup toolchain install stable --profile minimal

  #     # check if this speeds anything up
  #     - uses: Swatinem/rust-cache@v2

  #     - name: Install sqlx-cli
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: install
  #         args: sqlx-cli

  #     - name: Run sqlx check
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: sqlx
  #         args: prepare --check -- --all-targets

  lint:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture
