name: deploy-prod

on:
  push:
    tags:
      - "prod-*"

jobs:
  wait-on-test:
    name: wait on test
    runs-on: ubuntu-latest
    steps:
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.ref }}
          check-name: test
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
  wait-on-build:
    name: wait on build
    runs-on: ubuntu-latest
    needs: wait-on-test
    steps:
      - name: Wait for build to succeed
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.ref }}
          check-name: build
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
  deploy-update-validator-rewards:
    name: deploy update-validator-rewards
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image cronjob/update-validator-rewards update-validator-rewards=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: create job --from=cronjob/update-validator-rewards update-validator-rewards-${{ steps.vars.outputs.sha_short }}
  deploy-update-supply-projection-inputs:
    name: deploy update-supply-projection-inputs
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image cronjob/update-supply-projection-inputs update-supply-projection-inputs=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: create job --from=cronjob/update-supply-projection-inputs update-supply-projection-inputs-${{ steps.vars.outputs.sha_short }}
  deploy-update-issuance-breakdown:
    name: deploy update-issuance-breakdown
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image cronjob/update-issuance-breakdown update-issuance-breakdown=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: create job --from=cronjob/update-issuance-breakdown update-issuance-breakdown-${{ steps.vars.outputs.sha_short }}
  deploy-sync-execution-supply-deltas:
    name: Deploy sync-execution-supply-deltas
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/sync-execution-supply-deltas sync-execution-supply-deltas=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/sync-execution-supply-deltas
  deploy-sync-beacon-states:
    name: Deploy sync-beacon-states
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/sync-beacon-states sync-beacon-states=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/sync-beacon-states
  deploy-update-effective-balance-sum:
    name: deploy update-effective-balance-sum
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image cronjob/update-effective-balance-sum update-effective-balance-sum=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: create job --from=cronjob/update-effective-balance-sum update-effective-balance-sum-${{ steps.vars.outputs.sha_short }}
  deploy-sync-execution-blocks:
    name: Deploy sync-execution-blocks
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/sync-execution-blocks sync-execution-blocks=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/sync-execution-blocks
  deploy-phoenix:
    name: deploy phoenix
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/phoenix phoenix=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/phoenix
  deploy-serve-fees-rs:
    name: Deploy serve-fees-rs
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/serve-fees-rs serve-fees-rs=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/serve-fees-rs
  deploy-record-eth-price:
    name: Deploy record-eth-price
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image deployment/record-eth-price record-eth-price=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: rollout status deployment/record-eth-price
  deploy-update-issuance-estimate:
    name: deploy update-issuance-estimate
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: set image cronjob/update-issuance-estimate update-issuance-estimate=rg.fr-par.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          command: create job --from=cronjob/update-issuance-estimate update-issuance-estimate-${{ steps.vars.outputs.sha_short }}
